{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAClCC,EAAW,KACXC,EAAU,KACVC,EAAY,KAEhB,SAASC,EAAcC,EAAUC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MAEpBA,MA8BTR,EAAOe,iBAAiB,UA1BA,SAAAC,GACpBA,EAAEC,iBACGD,EAAEE,OAAOC,QAEd,IAEiBC,EAAfJ,EAAEK,cADFC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG7BtB,EAAWuB,OAAOH,EAAMI,OACxBvB,EAAUsB,OAAOF,EAAKG,OACtBtB,EAAYqB,OAAOD,EAAOE,OAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKvB,EAAWuB,IAC9BtB,EAAcsB,EAAGzB,GACd0B,MAAK,SAAAC,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBV,EAAAiC,OAAOC,QAAS,uBAAuCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAE9D0B,OAAM,SAAAJ,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBV,EAAAiC,OAAOI,QAAS,sBAAoCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAG9DL,GAAYC,EAGdY,EAAEK,cAAce","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nlet delayInp = null;\nlet stepInp = null;\nlet amountInp = null;\n\nfunction createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const shouldResolve = Math.random() > 0.3;\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\n    const submitHandler = e => {\n      e.preventDefault();\n      if (!e.target.tagName === 'BUTTON') return;\n    \n      const {\n        elements: { delay, step, amount }   \n    } = e.currentTarget;\n\n    delayInp = Number(delay.value);\n    stepInp = Number(step.value);\n    amountInp = Number(amount.value);\n\n    for (let i = 1; i <= amountInp; i++) {\n      createPromise(i, delayInp)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n  \n      delayInp += stepInp;\n    }\n  \n    e.currentTarget.reset();\n  };\n  formEl.addEventListener('submit', submitHandler);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$stepInp","$ce04d3a99e08e73b$var$amountInp","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","target","tagName","_elements","currentTarget","elements","delay1","step","amount","Number","value","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.2829697e.js.map"}